* {
    font-family: Arial, Helvetica, sans-serif;
    margin: 1vw;

}

.titleArea {
    border: 1px solid rgba(0, 0, 0, .25);

}

.mainArea {
    position: relative;
}

#dropZone {
    position: absolute;
    width: 60vw;
    height: auto;
    border: 1px solid rgba(0, 0, 0, .25);
    margin-top: 1vw;

}

#formBox {
    position: absolute;
    display: flex;
    width: 15%;
    height: auto;
    left: 75%;
    border: 1px solid rgba(0, 0, 0, .25);
    box-shadow: -2px 5px 20px .5px rgba(0, 0, 0, .15);
    border-radius: 15px;


}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Axios Todo</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.js"></script>

    <script src="index.js"></script>
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <header></header>
    <main>
        <div class="mainArea">
            <div class="titleArea">
                <h1>Axios Todo</h1>
            </div>
            <div id="dropZone">
                <h2>Up Next</h2>
                
                

            </div>
            <div id="formBox">
                <form id="form">
                    <input name="title" id="title" type="text" placeholder="title" value="">
                    <input name="price" id="price" type="number" placeholder="Price" value="">
                    <input name="description" id="description" type="text" placeholder="Description" value="">
                    <input name="imgUrl" id="imgUrl" type="text" placeholder="imgUrl" value="">
                    <button type="submit" id="submit">Submit</button>
                </form>
            </div>
        </div>    
    </main>
    
</body>
</html>
// const { default: axios } = require("axios")
// const { type } = require("os")
// const { relative } = require("path")




function axiosGet() {


axios.get("https://api.vschool.io/kirksurber/todo")
.then(response => {
    for(let i =0; i<response.data.length; i++){
    
    const h2 = document.createElement("h2")
    h2.innerText = response.data[i].title
    const dropZone = document.getElementById("dropZone")
    const makeDiv = document.createElement("div")
    const check = document.createElement("input")
    check.className = "check"
    check.type = "checkbox"
    check.value = response.data[i].completed
    const checkLabel = document.createElement("label")
    checkLabel.innerText = response.data[i].completed
    
    const editBut = document.createElement("button")
    editBut.innerText = "Edit"
    editBut.className = "edit"
    editBut.value = response.data[i]._id
    const delBut = document.createElement("button")
    delBut.innerText = "Delete"
    delBut.className = "delete"
    delBut.value = response.data[i]._id
    const newTodo = document.querySelector("newTodo")
    
    dropZone.appendChild(makeDiv)
    makeDiv.appendChild(h2)
    makeDiv.appendChild(check)
    makeDiv.appendChild(checkLabel)
    makeDiv.appendChild(editBut)
    makeDiv.appendChild(delBut)
    
    
    makeDiv.style.display = "flex"
    makeDiv.style.position = "relative"
    makeDiv.style.border = "1px solid #3c3c3c"
    makeDiv.style.borderRadius = "15px"
    h2.style.width = "50%"
    editBut.style.marginLeft = "60%"
}
})
.catch(error => console.log(error))

}

axiosGet()

document.addEventListener("submit", (e) => {
    e.preventDefault()

 

    form.onsubmit = makeTodo()
    
})


function makeTodo() {
    const formTitle = document.getElementById("title").value
    const formPrice = document.getElementById('price').value
    const formDes = document.getElementById('description').value
    const formURL = document.getElementById('imgUrl').value
    const dropZone = document.getElementById("dropZone")
    const makeDiv = document.createElement("div")
    makeDiv.className = "newTodo"
    const h2 = document.createElement('h2')
    h2.innerText = formTitle
    const h3Desc = document.createElement('h3')
    h3Desc.innerText = formDes
    const h3Price = document.createElement("h3")
    h3Price.innerText = formPrice
    const h3Url = document.createElement("h3")
    h3Url.innerText = formURL
    const check = document.createElement("input")
    check.className = "check"
    check.type = "checkbox"
    const checkLabel = document.createElement("label")
    checkLabel.innerText = "false"
    
    const editBut = document.createElement("button")
    editBut.innerText = "Edit"
    editBut.className = "edit"
    const delBut = document.createElement("button")
    delBut.innerText = "Delete"
    delBut.className = "delete"
    const newTodo = document.querySelector("newTodo")
    
    dropZone.appendChild(makeDiv)
    makeDiv.appendChild(h2)
    makeDiv.appendChild(h3Price)
    makeDiv.appendChild(h3Desc)
    makeDiv.appendChild(h3Url)
    makeDiv.appendChild(check)
    makeDiv.appendChild(checkLabel)
    makeDiv.appendChild(editBut)
    makeDiv.appendChild(delBut)

    makeDiv.style.display = "flex"
    makeDiv.style.position = "relative"
    makeDiv.style.border = "1px solid #3c3c3c"
    makeDiv.style.borderRadius = "15px"

    const newTodoInfo = {
        completed: checkLabel.innerHTML,
        title: title.value,
        price: price.value,
        description: description.value,
        imgUrl: imgUrl.value
    
    }

    axios.post("https://api.vschool.io/kirksurber/todo", newTodoInfo)
    .then(response => console.log(response.data))

    .catch(error => error)

    dropZone.innerHTML = ""
    axios.get("https://api.vschool.io/kirksurber/todo")
    .then(response => {
        for(let i =0; i<response.data.length; i++){
        
        const h2 = document.createElement("h2")
        h2.innerText = response.data[i].title
        const dropZone = document.getElementById("dropZone")
        const makeDiv = document.createElement("div")
        const check = document.createElement("input")
        check.className = "check"
        check.type = "checkbox"
        check.value = response.data[i].completed
        const checkLabel = document.createElement("label")
        checkLabel.innerText = response.data[i].completed
        
        const editBut = document.createElement("button")
        editBut.innerText = "Edit"
        editBut.className = "edit"
        const delBut = document.createElement("button")
        delBut.innerText = "Delete"
        delBut.className = "delete"
        delBut.value = response.data[i]._id
        const newTodo = document.querySelector("newTodo")
        
        dropZone.appendChild(makeDiv)
        makeDiv.appendChild(h2)
        makeDiv.appendChild(check)
        makeDiv.appendChild(checkLabel)
        makeDiv.appendChild(editBut)
        makeDiv.appendChild(delBut)
        
        
        makeDiv.style.display = "flex"
        makeDiv.style.position = "relative"
        makeDiv.style.border = "1px solid #3c3c3c"
        makeDiv.style.borderRadius = "15px"
        h2.style.width = "50%"
        editBut.style.marginLeft = "60%"

        location.reload()
    }
    })
    .catch(error => console.log(error))
    
    

   // CLEAR ALL DROPZONE INNERHTML AND DO AXIOS GET AGAIN TO GAIN ID'S!!!!
}






document.addEventListener("click", (e) => {
    if (e.target.innerText === "Delete") {
        axios.delete("https://api.vschool.io/kirksurber/todo/" + e.target.value)
        .then(response => {
            const dropZone = document.getElementById("dropZone")
            dropZone.innerHTML = ""
            axiosGet()
            location.reload
    })
        
        
        .catch(error => console.log(error))
        
    } else if(e.target.innerText === "Edit") {
// grab h2 and allow input box
    
        
    }
})


function updateTask() {
    const checkStat = document.getElementsByClassName("check")
    checkStat.addEventListener("change", (e) => {
        axios.put("https://api.vschool.io/kirksurber/todo/" + e.target.value)





        const newTodoInfo = {
            completed: checkLabel.innerHTML,
            title: title.value,
            price: price.value,
            description: description.value,
            imgUrl: imgUrl.value
        
        }        
    })
}


